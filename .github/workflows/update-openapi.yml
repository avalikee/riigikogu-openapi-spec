name: Update Riigikogu OpenAPI

on:
    schedule:
        - cron: "0 20 * * *" # Daily 20:00 UTC
    workflow_dispatch:

permissions:
    contents: write

jobs:
    update:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up mise
              uses: jdx/mise-action@v2

            - name: Install tools from mise.toml
              run: mise install

            - name: Run spec-fetcher
              id: fetch
              run: |
                  set -e
                  result=$(python tools/spec-fetcher/spec-fetcher.py | tail -n 1)
                  echo "$result"
                  echo "status=$result" >> $GITHUB_OUTPUT

            # Node is installed and placed on PATH by mise according to mise.toml (node = "24")

            - name: Generate entry files from JSON
              run: |
                  mkdir -p js
                  node - <<'NODE'
                  const fs = require('fs');
                  const json = fs.readFileSync('riigikogu-openapi.json','utf8').trim();
                  fs.writeFileSync('js/index.mjs', `// Generated by CI — do not edit\nexport default ${json}\n`);
                  fs.writeFileSync('js/index.cjs', `// Generated by CI — do not edit\nmodule.exports = ${json}\n`);
                  fs.writeFileSync('js/index.d.ts', `// Generated by CI — do not edit\ndeclare const spec: Record<string, unknown>;\nexport default spec;\n`);
                  NODE

            - name: Format JS entries
              run: prettier --write js

            - name: Read spec version
              id: spec_version
              run: echo "version=$(node -p "require('./riigikogu-openapi.json').info.version")" >> $GITHUB_OUTPUT

            - name: Sync package.json version
              id: sync_version
              run: |
                  node --input-type=module - <<'NODE'
                  import { readFile, writeFile, appendFile } from 'node:fs/promises';
                  const pkgPath = 'package.json';
                  const pkg = JSON.parse(await readFile(pkgPath, 'utf8'));
                  const version = process.env.SPEC_VERSION;
                  const updated = pkg.version !== version;
                  if (updated) {
                    pkg.version = version;
                    await writeFile(pkgPath, JSON.stringify(pkg, null, 2) + '\n');
                  }
                  await appendFile(process.env.GITHUB_OUTPUT, `updated=${updated}\n`);
                  NODE
              env:
                  SPEC_VERSION: ${{ steps.spec_version.outputs.version }}

            - name: Commit generated files and version bump
              run: |
                  set -e
                  git config user.name "github-actions[bot]"
                  git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git add riigikogu-openapi.json js/index.mjs js/index.cjs js/index.d.ts package.json
                  if ! git diff --cached --quiet; then
                      git commit -m "chore: update spec and entries; v${{ steps.spec_version.outputs.version }}"
                      git push
                  fi

            - name: Validate package contents (dry run)
              run: npm pack --dry-run

            - name: Publish to npm
              if: steps.sync_version.outputs.updated == 'true'
              run: npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
